name: RunTests

on: [push]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    env:
      # Target machine service name without .service extension
      SERVICENAME: discordbot
      # Username of the service (may be identical to above)
      USERNAME: discordbot
      # Secrets: HOST (host ip address), USERKEY (private ssh key)
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
        python-version: [3.7, 3.8, 3.9]

    steps:
      - uses: actions/checkout@v1

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}

      # Use pip requirements.txt cache https://github.com/actions/cache/blob/master/examples.md#python---pip
      # Apparently you can't use cache when using pipenv (but perhaps when specifying the pipenv environment folder?)

      - name: Install dependencies
        run: |
          python -m pip install poetry
          poetry install

      - name: Test with pytest
        run: |
          poetry run pytest test/

      # Send files to server
      - name: Update server files
        uses: appleboy/scp-action@master
        with:
          # Host ip address
          host: ${{ secrets.HOST }}
          port: 22
          # My username on the host machine
          username: ${{ env.USERNAME }}
          # Contents of .ssh/id_dsa, private RSA key
          key: ${{ secrets.USERKEY }}
          # Passphrase to decrypt private key
          passphrase: ""
          source: "."
          target: "/home/${{ env.USERNAME }}/${{ env.USERNAME }}"
        if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.7'

      # Updating .service file requires target machine to have existing /etc/systemd/system/${{env.SERVICENAME}}.service file and chown to this user
      # Disabling and enabling service requires entries in the visudo file with
      # <username_here> ALL=(ALL) NOPASSWD: /bin/systemctl daemon-reload
      # <username_here> ALL=(ALL) NOPASSWD: /bin/systemctl start <service_name_here>
      # <username_here> ALL=(ALL) NOPASSWD: /bin/systemctl stop <service_name_here>
      # <username_here> ALL=(ALL) NOPASSWD: /bin/systemctl disable <service_name_here>
      # <username_here> ALL=(ALL) NOPASSWD: /bin/systemctl enable <service_name_here>
      - name: Update dependencies and .service file then re-enable service
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          port: 22
          username: ${{ env.USERNAME }}
          key: ${{ secrets.USERKEY }}
          passphrase: ""
          script: |
            cd "/home/${{ env.USERNAME}}/${{ env.USERNAME }}"
            poetry install --no-dev
            cp "/home/${{ env.USERNAME }}/${{ env.USERNAME }}/systemd/${{ env.SERVICENAME }}.service" "/etc/systemd/system/${{ env.SERVICENAME }}.service"
            sudo /bin/systemctl daemon-reload
            sudo /bin/systemctl enable ${{ env.SERVICENAME }}
            sudo /bin/systemctl start ${{ env.SERVICENAME }}
        if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.7'
